🚀 Conventional Commit 메시지 형식
기본 형식
plaintext
복사
편집
<타입>: <제목>

<본문> (선택)
<이슈 번호> (선택)
예제
plaintext
복사
편집
feat: 회원가입 기능 추가

사용자가 이메일과 비밀번호로 가입할 수 있도록 API 추가
JWT 토큰을 발급하는 기능 포함

Closes #32
🛠 주요 커밋 타입
타입	의미
feat	새로운 기능 추가
fix	버그 수정
docs	문서 변경 (README.md 수정 등)
style	코드 스타일 변경 (공백, 세미콜론 수정, 코드 포맷팅 등)
refactor	코드 리팩토링 (기능 변화 없음)
test	테스트 코드 추가/수정
chore	빌드, 패키지 매니저 수정 (예: package.json 수정)
perf	성능 개선
🔥 예제 커밋 메시지
plaintext
복사
편집
feat: 회원가입 API 추가

- 이메일과 비밀번호로 가입 가능
- JWT 토큰 발급 기능 포함
plaintext
복사
편집
fix: 로그인 시 비밀번호 검증 오류 수정

- bcrypt 비교 함수에서 async/await 적용 안 된 문제 해결
plaintext
복사
편집
docs: README에 설치 가이드 추가
plaintext
복사
편집
refactor: 유저 모델 코드 정리
plaintext
복사
편집
test: 회원가입 API 테스트 코드 추가
✅ 커밋 메시지를 잘 쓰는 이유
프로젝트 관리가 쉬워짐 → 어떤 커밋이 어떤 작업을 했는지 한눈에 알 수 있음.
팀 협업에서 유용함 → 다른 개발자가 변경 내용을 빠르게 파악할 수 있음.
자동화 도구와 연동 가능 → feat이나 fix를 감지하여 자동 배포(trigger) 를 할 수 있음.
📌 결론: 깃 커밋할 때 이렇게 쓰자!
bash
복사
편집
git commit -m "feat: 로그인 API 추가"
git commit -m "fix: 비밀번호 해싱 오류 해결"
git commit -m "docs: 프로젝트 가이드 문서 추가"
이제 깃 커밋 메시지를 작성할 때 더 깔끔하고 체계적으로 관리할 수 있을 거야! 🚀
혹시 더 궁금한 점 있으면 질문해줘! 😃

방법 1️⃣: 간단한 한 줄 커밋 (제목만 입력)
bash
복사
편집
git commit -m "feat: 회원가입 API 추가"
이 방법은 **제목(타입 + 커밋 내용)**만 입력할 때 사용.
방법 2️⃣: 여러 줄 커밋 메시지 입력
터미널에서 여러 줄을 입력하고 싶다면 -m 옵션을 두 번 이상 사용할 수도 있어.

bash
복사
편집
git commit -m "feat: 회원가입 API 추가" -m "- 이메일과 비밀번호로 가입 가능" -m "- JWT 토큰 발급 기능 포함"
-m 옵션을 여러 번 사용하면 여러 줄 입력이 가능.
방법 3️⃣: Vim/기본 편집기로 상세 메시지 입력
bash
복사
편집
git commit
위 명령어를 입력하면 기본 편집기(Vim, Nano 등)가 열림.
여기에 다음과 같이 작성하면 돼.

diff
복사
편집
feat: 회원가입 API 추가

- 이메일과 비밀번호로 가입 가능
- JWT 토큰 발급 기능 포함
저장 후 종료하면 커밋이 완료됨.
방법 4️⃣: VS Code에서 커밋 메시지 작성
bash
복사
편집
git commit -m "feat: 회원가입 API 추가" --edit
위 명령어를 입력하면 VS Code 또는 기본 편집기에서 커밋 메시지를 작성할 수 있어.

또는 아예 Git 편집기를 VS Code로 지정해서 사용할 수도 있음:

bash
복사
편집
git config --global core.editor "code --wait"
이후 git commit을 입력하면 VS Code에서 커밋 메시지를 작성할 수 있음.

🔥 결론: 네 경우에 맞게 선택하면 됨!
간단한 커밋: git commit -m "feat: 회원가입 API 추가"
여러 줄 커밋 (-m 여러 개 사용): git commit -m "feat: 회원가입 API 추가" -m "- 이메일과 비밀번호로 가입 가능" -m "- JWT 토큰 발급 기능 포함"
Vim/Nano에서 직접 작성: git commit
VS Code에서 작성: git commit --edit